What is Big O for this? 
1) Determine the Big O for the following algorithm: 
You are sitting in a room with 15 people.You want to find a playmate;
for your dog, preferably of the same breed.So you want to know if
 anyone out of the 15 people have the same breed as your dog.;
You stand up and yell out, who here has a golden retriever and;
would like to be a playdate for my golden. 
Someone yells - "I do, be happy to bring him over";

it doesn't matter how many people are in the room, you only have to shout 
once - 'one operation' 
15 people are like the array - return is the person yelling back that they can 
bring him over - O(1) running 1 x



2. 2) Determine the Big O for the following algorithm: You are sitting in a
 room with 15 people. You want to find a playmate for your dog who is of 
 the same breed. So you want to know if anyone out of the 15 people have 
 the same breed as your dog. You start with the first person and ask him 
 if he has a golden retriever. He says no, then you ask the next person, 
 and the next, and the next until you find someone who has a golden or 
 there is no one else to ask. 

you go person to person to ask which would be linear O(n) - running n x's 
until you get to the end. 




2. Even or Odd?
What is the Big O of the following algorithm? Explain your answer

function isEven(value) {
    if (value % 2 === 0) {
        return true;
    }
    else {
        return false;
    }
}

it takes in a single value so it doesn't matter if it is 6 or 6 million
it will take the same time to run - function called once Constant 0(1)






3. Are you here?
What is the Big O of the following algorithm? Explain your answer

function areYouHere(arr1, arr2) {
    for (let i = 0; i < arr1.length; i++) {
        const el1 = arr1[i];
        for (let j = 0; j < arr2.length; j++) {
            const el2 = arr2[j];
            if (el1 === el2) return true;
        }
    }
    return false;
}

polynomial because it has nested loops - O(n^k) Polynomial


4. Doubler
What is the Big O of the following algorithm? Explain your answer

function doubleArrayValues(array) {
    for (let i = 0; i < array.length; i++) {
        array[i] *= 2;
    }
    return array;
}

Linear because each item is running through once 


5. Naive search
What is the Big O of the following algorithm? Explain your answer

function naiveSearch(array, item) {
    for (let i = 0; i < array.length; i++) {
        if (array[i] === item) {
            return i;
        }
    }
}

Linear it runs through once, but also checks so O(2n)

